name: CI

on:
  pull_request:
    paths-ignore:
    - '**.rst'
  push:
    paths-ignore:
    - '**.rst'
    branches-ignore:
    - 'master'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest,macos-latest]
        go-version: [1.13.1]

    steps:
    - uses: actions/checkout@v2

    - name: golang ${{ matrix.go-version }}
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    - uses: actions/cache@v1
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-001

    - uses: actions/cache@v1
      if: startsWith(runner.os, 'macOS')
      with:
        path: ~/Library/Caches/pip
        key: ${{ runner.os }}-pip-001

    - uses: actions/cache@v1
      with:
        path: ~/local
        key: ${{ runner.os }}-local-000

    - name: paths
      uses: dickmao/setup-paths@master
      with:
        paths: local/bin

    - name: apt-get
      if: startsWith(runner.os, 'Linux')
      run: |
        sudo apt-get -yq update
        DEBIAN_FRONTEND=noninteractive sudo apt-get -yq install gnutls-bin sharutils nodejs gfortran gnupg2 dirmngr libreadline-dev libcurl4-openssl-dev texlive-latex-base

    - name: dependencies
      run: |
        mkdir -p ~/local/bin
        mkdir -p ~/local/lib

    - name: versions
      run: |
        go version
        curl --version

    - name: libgit2
      run: |
         if [ ! -e ~/local/lib/libgit2.so ]; then \
            if [ ! -e ~/local/libgit2-1.0.1 ]; then \
               cd ~/local && curl -sLk -O https://github.com/libgit2/libgit2/releases/download/v1.0.1/libgit2-1.0.1.tar.gz && tar xfz libgit2-1.0.1.tar.gz ; \
               cd ~/local/libgit2-1.0.1 && mkdir -p build && cd build && cmake .. -DTHREADSAFE=ON -DBUILD_CLAR=OFF -DBUILD_SHARED_LIBS=ON -DREGEX_BACKEND=builtin -DCMAKE_C_FLAGS=-fPIC -DCMAKE_BUILD_TYPE="RelWithDebInfo" -DCMAKE_INSTALL_PREFIX=~/local && cmake --build . --target install ; \
            fi ; \
         fi

    - name: macos-dependencies
      if: startsWith(runner.os, 'macOS')
      run: |
         brew list gnupg &>/dev/null || HOMEBREW_NO_AUTO_UPDATE=1 brew install gnupg
         brew list pkgconfig &>/dev/null || HOMEBREW_NO_AUTO_UPDATE=1 brew install pkg-config

    - name: test
      env:
         LD_LIBRARY_PATH: ~/local/lib
         DYLD_FALLBACK_LIBRARY_PATH: ~/local/lib
         PKG_CONFIG_PATH: ~/local/lib/pkgconfig
      run: |
        make test
